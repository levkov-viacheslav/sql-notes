SELECT * FROM customers; --select all from customers table

SELECT contact_name, city FROM customers; --select only names, cities from customers table

SELECT order_id, (shipped_date - order_date) FROM orders; -- select the order id and date between shipped date and order date

SELECT DISTINCT city FROM customers; -- select unique cities where are customers from

SELECT DISTINCT city, country FROM customers; --select the unique city-country set from customers table

SELECT COUNT (DISTINCT contact_name) FROM customers; --how many unique customers do we have

SELECT COUNT(DISTINCT country) FROM customers; -- Count the number of unique countries where customers live

SELECT DISTINCT country FROM customers ORDER BY country; -- select countries in order (same ORDER BY country ASC)

SELECT DISTINCT country, city FROM customers ORDER BY country DESC, city DESC; -- select countries and cities in reverse order

SELECT order_id FROM orders WHERE ship_country IN ('France', 'Austria', 'Spain'); -- select all orders from France, Austria and Spain countries

SELECT * FROM orders ORDER BY required_date DESC, shipped_date ASC; -- select all orders and sort by required date(reverse) and by shipped date (ASC)

SELECT MIN (unit_price) FROM products WHERE units_in_stock > 30; -- select the min price of the product among those products that are in stock more than 30 units

SELECT MAX(units_in_stock) FROM products WHERE unit_price > 30; -- select the max number of products units amoung those products whose price is more than 30

SELECT AVG(shipped_date - order_date) FROM orders WHERE ship_country='USA'; -- select the avarage value of daysleaving for delivery from the date the order was placed in USA

SELECT SUM(unit_price * units_in_stock) FROM products WHERE discontinued <> 1; --select the sum of all discontinued products


-- PATTERN MATCHING WITH LIKE--
-- % 	placeholder, it means 0, 1 or more symbols
-- _  only one symbol
--
-- examples:
--
-- LIKE 'U%'
-- LIKE '%a'
-- LIKE '_jo_'
-- LIKE '_ker%'  etc...

SELECT last_name, first_name FROM  employees WHERE first_name LIKE '%n' -- find all employees whoose name ends with 'n'

SELECT customer_id FROM customers WHERE phone_number LIKE '+358%' -- find customers from finland (+358 phone's code)

SELECT product_name, unit_price FROM products LIMIT 10 -- find first 10 lines

SELECT contact_name, region FROM customers WHERE region IS NOT null -- check for null

SELECT ship_country, COUNT(*) FROM orders WHERE freight > 50 GROUP BY ship_country ORDER BY COUNT(*) DESC -- Select the number of orders
 which freight greather than 50 from each country (grouping by order) and sort these

SELECT category_id, SUM(units_in_stock) FROM products GROUP BY category_id ORDER BY SUM(units_in_stock) DESC LIMIT 10

SELECT category_id, SUM(unit_price * units_in_stock) FROM products
WHERE discontinued <> 1
GROUP BY category_id
HAVING SUM(unit_price * units_in_stock) > 5000
ORDER BY SUM(unit_price * units_in_stock) DESC -- "Having" allows us to add one more condition to in the query

SELECT country FROM customers
UNION
SELECT country FROM employees -- Math union of columns (from 2 different tables) without duplicates (use UNION ALL for union with duplicates)

SELECT country FROM customers
INTERSECT
SELECT country FROM employees -- Intersection of countries

SELECT country FROM customers
EXCEPT
SELECT country FROM suppliers -- Select countries where customers are living, but suppliers are not.

SELECT country FROM customers
EXCEPT ALL
SELECT country FROM suppliers -- difference between duplicates (table1 duplicates - table2 duplicates)

--few examples:

SELECT * FROM orders WHERE ship_country LIKE 'U%'

SELECT order_id, customer_id, freight, ship_country FROM orders
WHERE ship_country LIKE 'N%'
ORDER BY freight DESC LIMIT 10

SELECT first_name, last_name, home_phone, region FROM employees
WHERE region IS NULL

SELECT COUNT(*) FROM customers
WHERE region IS null

SELECT COUNT(*), country FROM suppliers
GROUP BY country
ORDER BY COUNT(*) DESC

SELECT ship_country, SUM(freight) FROM orders
WHERE ship_region IS NOT null
GROUP BY ship_country
HAVING SUM(freight) > 2750
ORDER BY SUM(freight) DESC

SELECT country FROM customers
UNION
SELECT country FROM suppliers
ORDER BY country

SELECT country FROM employees
INTERSECT
SELECT country FROM customers
INTERSECT
SELECT country FROM suppliers

SELECT country FROM customers
INTERSECT
SELECT country FROM suppliers
EXCEPT
SELECT country FROM employees








